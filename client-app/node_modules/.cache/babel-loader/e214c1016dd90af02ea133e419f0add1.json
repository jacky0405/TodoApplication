{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sphwn\\\\eclipse-workspace\\\\demo\\\\src\\\\main\\\\resources\\\\client-app\\\\src\\\\component\\\\todo\\\\TodoComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoComponent(props) {\n  _s();\n\n  useEffect(() => {\n    const username = AuthenticationService.getLoginUserName();\n    TodoDataService.getTodo(username, props.match.params.id).then(res => setObj(res.data));\n  });\n  const [obj, setObj] = useState({});\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter over 5 words\";\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = \"Enter a valid date\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: obj,\n        onSubmit: onSubmit,\n        validate: validate,\n        validateOnChange: false,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"targetDate\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"date\",\n              name: \"targetDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoComponent, \"7dVFhe5wyacasZmCsIhFLBYNeK0=\");\n\n_c = TodoComponent;\nexport default TodoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoComponent\");","map":{"version":3,"sources":["C:/Users/sphwn/eclipse-workspace/demo/src/main/resources/client-app/src/component/todo/TodoComponent.jsx"],"names":["ErrorMessage","Field","Form","Formik","moment","React","useEffect","useState","TodoDataService","AuthenticationService","TodoComponent","props","username","getLoginUserName","getTodo","match","params","id","then","res","setObj","data","obj","onSubmit","values","console","log","validate","errors","description","length","targetDate","isValid"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TodoDataService from '../../api/todo/TodoDataService.js';\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\nfunction TodoComponent(props){\r\n\r\n    useEffect(() => {\r\n        const username = AuthenticationService.getLoginUserName();\r\n        TodoDataService.getTodo(username, props.match.params.id)\r\n            .then(res => setObj(res.data));\r\n    })\r\n\r\n    const [obj, setObj] = useState({})\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    }\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        } else if(values.description.length < 5){\r\n            errors.description = \"Enter over 5 words\"\r\n\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid()){\r\n            errors.targetDate = \"Enter a valid date\"\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo</h1>\r\n            <div className=\"container\">\r\n                <Formik \r\n                    initialValues={obj} \r\n                    onSubmit={onSubmit} \r\n                    validate={validate}\r\n                    validateOnChange={false}>\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                </fieldset>\r\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Target Date</label>\r\n                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\r\n                                </fieldset>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}