{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sphwn\\\\eclipse-workspace\\\\demo\\\\src\\\\main\\\\resources\\\\client-app\\\\src\\\\component\\\\todo\\\\TodoComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoComponent(props) {\n  _s();\n\n  const [obj, setObj] = useState({\n    description: \"\",\n    targetDate: \"\"\n  });\n  useEffect(() => {\n    const username = AuthenticationService.getLoginUserName();\n    TodoDataService.getTodo(username, props.match.params.id).then(res => {\n      setObj({\n        description: res.data.description || \"\",\n        targetDate: moment(res.data.targetDate).format('YYYY-MM-DD')\n      });\n    });\n  }, [props.match.params.id]);\n\n  const onSubmit = values => {\n    const username = AuthenticationService.getLoginUserName();\n    console.log(typeof props.match.params.id);\n\n    if (props.match.params.id === -1) {\n      console.log('new todo');\n      TodoDataService.createTodo(username, {\n        id: props.match.params.id,\n        description: values.description,\n        targetDate: values.targetDate\n      }).then(() => {\n        props.history.push(\"/todos\");\n      });\n    } else {\n      console.log('update todo');\n      TodoDataService.editTodo(username, props.match.params.id, {\n        id: props.match.params.id,\n        description: values.description,\n        targetDate: values.targetDate\n      }).then(() => {\n        props.history.push(\"/todos\");\n      });\n    }\n  };\n\n  const validate = values => {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter over 5 words\";\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = \"Enter a valid date\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: obj,\n        onSubmit: onSubmit,\n        validate: validate,\n        validateOnChange: false,\n        validateOnBlur: false,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"targetDate\",\n            component: \"div\",\n            className: \"alert alert-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Target Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"date\",\n              name: \"targetDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoComponent, \"iylCn5MHar9cxh/zXQOAX0TYeWI=\");\n\n_c = TodoComponent;\nexport default TodoComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoComponent\");","map":{"version":3,"sources":["C:/Users/sphwn/eclipse-workspace/demo/src/main/resources/client-app/src/component/todo/TodoComponent.jsx"],"names":["ErrorMessage","Field","Form","Formik","moment","React","useEffect","useState","TodoDataService","AuthenticationService","TodoComponent","props","obj","setObj","description","targetDate","username","getLoginUserName","getTodo","match","params","id","then","res","data","format","onSubmit","values","console","log","createTodo","history","push","editTodo","validate","errors","length","isValid"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TodoDataService from '../../api/todo/TodoDataService.js';\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\nfunction TodoComponent(props){\r\n\r\n    const [obj, setObj] = useState({\r\n        description: \"\",\r\n        targetDate: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        const username = AuthenticationService.getLoginUserName();\r\n        TodoDataService.getTodo(username, props.match.params.id)\r\n            .then(res =>{ setObj({\r\n                description: res.data.description || \"\",\r\n                targetDate: moment(res.data.targetDate).format('YYYY-MM-DD')\r\n            })});\r\n        \r\n    },[props.match.params.id])\r\n\r\n\r\n    const onSubmit = (values) => {\r\n        const username = AuthenticationService.getLoginUserName();\r\n        console.log(typeof props.match.params.id);\r\n        if(props.match.params.id === -1){\r\n            console.log('new todo')\r\n            TodoDataService.createTodo(username, {\r\n                id: props.match.params.id,\r\n                description: values.description,\r\n                targetDate: values.targetDate\r\n            }).then(() => {props.history.push(\"/todos\");});\r\n        } else{\r\n            console.log('update todo')\r\n            TodoDataService.editTodo(username, props.match.params.id, {\r\n                id: props.match.params.id,\r\n                description: values.description,\r\n                targetDate: values.targetDate\r\n            }).then(() => {props.history.push(\"/todos\");})\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        } else if(values.description.length < 5){\r\n            errors.description = \"Enter over 5 words\"\r\n\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid()){\r\n            errors.targetDate = \"Enter a valid date\"\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo</h1>\r\n            <div className=\"container\">\r\n                <Formik \r\n                    initialValues={obj} \r\n                    onSubmit={onSubmit} \r\n                    validate={validate}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    enableReinitialize={true}>\r\n                    {\r\n                        (props) => (\r\n                            <Form>\r\n                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Description</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                </fieldset>\r\n                                <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>Target Date</label>\r\n                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\r\n                                </fieldset>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}